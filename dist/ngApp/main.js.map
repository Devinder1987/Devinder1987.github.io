{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/safe.pipe.ts","webpack:///./src/app/video-center/video-center.component.css","webpack:///./src/app/video-center/video-center.component.html","webpack:///./src/app/video-center/video-center.component.ts","webpack:///./src/app/video-detail/video-detail.component.css","webpack:///./src/app/video-detail/video-detail.component.html","webpack:///./src/app/video-detail/video-detail.component.ts","webpack:///./src/app/video-list/video-list.component.css","webpack:///./src/app/video-list/video-list.component.html","webpack:///./src/app/video-list/video-list.component.ts","webpack:///./src/app/video.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VideoCenterComponent } from './video-center/video-center.component';\nimport {HomeComponent} from './home/home.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'videos', component: VideoCenterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/home\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/videos\\\">PlayList</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\nimport { VideoListComponent } from './video-list/video-list.component';\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    VideoCenterComponent,\n    VideoListComponent,\n    VideoDetailComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\"> \\n  <h1>Video Player</h1>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url: any) {\n    console.log(url);\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url.replace('watch?v=', 'embed/'));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-9\\\">\\n    <div *ngIf=\\\"newVideo\\\">\\n      <h2> New Video</h2>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"addVideoSubmit(form.value)\\\" class=\\\"well\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Title</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"title\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Url</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"url\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" ngModel>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n      </form>\\n    </div>\\n    <app-video-detail *ngIf=\\\"selectedVideo && !newVideo\\\" [video]=\\\"selectedVideo\\\"></app-video-detail>\\n  </div>\\n  <div class=\\\"col-sm-3\\\">\\n    <button (click)=\\\"hideNewVideo()\\\" style=\\\"margin-bottom: 2px;\\\" type=\\\"button\\\" class=\\\"tn btn-success btn-block\\\">+ New Video</button>\\n    <app-video-list  (SelectVideo)=\\\"onSelectVideo($event)\\\" [videos]=\\\"videos\\\"></app-video-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Video } from '../video';\nimport { VideoService } from '../video.service';\n\n@Component({\n  selector: 'app-video-center',\n  templateUrl: './video-center.component.html',\n  styleUrls: ['./video-center.component.css'],\n  providers: [VideoService]\n})\nexport class VideoCenterComponent implements OnInit {\n\n  videos: Array<Video>;\n  selectedVideo: Video;\n  private newVideo = false;\n  constructor(private _VideoService: VideoService) { }\n\n  ngOnInit() {\n    console.log(this._VideoService);\n    this._VideoService.getVideos('videos').subscribe((response: Array<Video>) => {\n      this.videos = response;\n      console.log(' Center Response: ', response);\n    });\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnChanges(): void {\n    this.newVideo = false;\n  }\n  onSelectVideo(video: any) {\n    console.log('Vid:', video);\n    this.selectedVideo = video;\n    this.newVideo = false;\n  }\n  addVideoSubmit(video: Video) {\n    console.log('asda');\n    this._VideoService.addVideo(video)\n      .subscribe((resNewVideo: Video) => {\n        console.log('1111');\n        this.videos.push(resNewVideo);\n        this.selectedVideo = resNewVideo;\n      });\n  }\n  hideNewVideo() {\n    this.newVideo = !this.newVideo;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <div>\\n        <iframe width=\\\"100%\\\" height=\\\"300\\\" [src]=\\\"video.url | safe\\\"></iframe>\\n        {{video.url}}\\n    </div>\\n    <form>\\n        <div *ngIf=\\\"editTitle\\\" class=\\\"form-group\\\">\\n            <input type=\\\"input\\\" class=\\\"form-control\\\" name=\\\"title\\\" required placeholder=\\\"title\\\" [(ngModel)]=\\\"video.title\\\">\\n        </div>\\n        <h3 *ngIf=\\\"!editTitle\\\" (click)=\\\"onTitleClick()\\\">{{video.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"input\\\" class=\\\"form-control\\\" name=\\\"url\\\" required placeholder=\\\"url\\\" [(ngModel)]=\\\"video.url\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"desc\\\" [(ngModel)]=\\\"video.description\\\"></textarea>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-video-detail',\n  templateUrl: './video-detail.component.html',\n  styleUrls: ['./video-detail.component.css']\n})\nexport class VideoDetailComponent implements OnInit {\n  private editTitle = false;\n  @Input('video') video: any;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnChanges() {\n    this.editTitle = false;\n  }\n  onTitleClick() {\n    this.editTitle = true;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav flex-column\\\">\\n  <li (click)=\\\"onSelect(video)\\\" class=\\\"nav-item\\\" *ngFor=\\\"let video of videos\\\">\\n    <a>{{video.title}}</a>\\n  </li>\\n</ul>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Video } from '../video';\n\n@Component({\n  selector: 'app-video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css']\n})\nexport class VideoListComponent implements OnInit {\n  @Input('videos') videos: string;\n  @Output('SelectVideo') SelectVideo = new EventEmitter();\n  constructor() { }\n  ngOnInit() {\n  }\n  onSelect(vid: Video) {\n    console.log('Video: ', vid);\n    this.SelectVideo.emit(vid);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Video } from './video';\n\nconst _url = 'http://localhost:3000/api/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class VideoService {\n\n  constructor(private http: HttpClient) { }\n  getVideos(url) {\n    return this.http.get(_url + url)\n      .pipe(map(res => res));\n  }\n  addVideo(video: Video) {\n    return this.http.post(_url + 'video', JSON.stringify(video), httpOptions)\n    .pipe(map(res => res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}